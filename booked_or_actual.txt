var b_or_a = "";
    		var change = {};
	    	$.each([{array: $scope.item.bookeds, change: Bookedchange, booked_or_actual: "bookedRev"}, {array: $scope.item.actuals, change: Actualchange, booked_or_actual: "actualRev"}], function(i, v){
	    		b_or_a = v.booked_or_actual;
	    		change = v.change;
	    		$.each(v.array, function(index, value){
	    			var date_str = $.datepicker.formatDate('yy-mm-dd', value.date);
	    			var q = order_by("change_date", "asc");
        			q.filters = [{name: "campaign_id", op: "eq", val: $scope.item.id}, {name:"change_date", op: "eq", val: today}, {name:"date", op:"eq", val: date_str}];
					change.get({q: angular.toJson(q)}, function (item) {
						var mybc = item.objects[0];
						console.log(mybc);
						var temp = {};
						if(mybc){
							temp = {id: mybc.id, campaign_id: $scope.item.id, change_date: today, date: date_str};
							temp[b_or_a] = value[b_or_a];
							change.update(temp);
	    				}else{
							temp = {campaign_id: $scope.item.id, change_date: today, date: date_str};
							temp[b_or_a] = value[b_or_a];
	    					change.save(temp);
	    				}
	    			});
	    		});
	    	});
			
		
	var booked_or_actual_changes = function(array, changeclass, field){
		$.each(array, function(index, value){
			var now = new Date();
			var today = $.datepicker.formatDate('yy-mm-dd', now); 
	    	var date_str = $.datepicker.formatDate('yy-mm-dd', value.date);
	    	var q = order_by("change_date", "asc");
        	q.filters = [{name: "campaign_id", op: "eq", val: $scope.item.id}, {name:"change_date", op: "eq", val: today}, {name:"date", op:"eq", val: date_str}];
			changeclass.get({q: angular.toJson(q)}, function (item) {
				var mybc = item.objects[0];
				var temp = {};
					if(mybc){
						temp = {id: mybc.id, campaign_id: $scope.item.id, change_date: today, date: date_str};
						temp[field] = value[field];
						changeclass.update(temp);
	    			}else{
						temp = {campaign_id: $scope.item.id, change_date: today, date: date_str};
						temp[field] = value[field];
	    				changeclass.save(temp);
	    			}
	    	});
	    });	
	};
			
			
			
			$.each($scope.item.actuals, function(index, value){
	    		var date_str = $.datepicker.formatDate('yy-mm-dd', value.date);
	    		var q = order_by("change_date", "asc");
        		q.filters = [{name: "campaign_id", op: "eq", val: $scope.item.id}, {name:"change_date", op: "eq", val: today}, {name:"date", op:"eq", val: date_str}];
				Actualchange.get({q: angular.toJson(q)}, function (item) {
					var mybc = item.objects[0];
					if(mybc){
	    				Actualchange.update({id: mybc.id, campaign_id: $scope.item.id, change_date: today, date: date_str, actualRev: value.actualRev});
	    			}else{
	    				Actualchange.save({campaign_id: $scope.item.id, change_date: today, date: date_str, actualRev: value.actualRev});
	    			}
	    		});
	    	});
	    	$.each($scope.item.bookeds, function(index, value){
	    		var date_str = $.datepicker.formatDate('yy-mm-dd', value.date);
	    		var q = order_by("change_date", "asc");
        		q.filters = [{name: "campaign_id", op: "eq", val: $scope.item.id}, {name:"change_date", op: "eq", val: today}, {name:"date", op:"eq", val: date_str}];
				Bookedchange.get({q: angular.toJson(q)}, function (item) {
					var mybc = item.objects[0];
					if(mybc){
	    				Bookedchange.update({id: mybc.id, campaign_id: $scope.item.id, change_date: today, date: date_str, bookedRev: value.bookedRev});
	    			}else{
	    				Bookedchange.save({campaign_id: $scope.item.id, change_date: today, date: date_str, bookedRev: value.bookedRev});
	    			}
	    		});
	    	});